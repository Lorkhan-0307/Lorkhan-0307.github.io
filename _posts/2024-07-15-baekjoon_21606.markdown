---
layout: post
title:  "백준 11724번 python 풀이 - 아침 산책"
date:   2024-07-15 09:15:00 +0900
categories: algorithm
tags: [python, 크래프톤정글문제풀이, 트리, DFS]
---

## 문제 링크
[21606번](https://www.acmicpc.net/problem/21606)

## 해결책
```python
import sys

sys.setrecursionlimit(10 ** 5)
ans = 0


def dfs_recur(start):
    is_visited[start] = True
    inside_count = 0

    for i in path[start]:
        if is_inside[i - 1] == 1:
            inside_count += 1

        elif is_inside[i - 1] == 0 and is_visited[i] is False:
            inside_count += dfs_recur(i)
    return inside_count


N = int(sys.stdin.readline().rstrip())
str_inside = sys.stdin.readline().rstrip()

# 1이면 실내, 0이면 실외
is_inside = []
for i in str_inside:
    is_inside.append(int(i))


path = [[] for _ in range(N + 1)]
is_visited = [False for _ in range(N + 1)]

for _ in range(N - 1):
    _from, _to = map(int, sys.stdin.readline().rstrip().split())
    path[_from].append(_to)
    path[_to].append(_from)

    if is_inside[_from - 1] == 1 and is_inside[_to - 1] == 1:
        ans += 2

if sum(is_inside) <= 1:
    print(0)
else:
    for i in range(1, N + 1):
        if is_inside[i - 1] == 0 and not is_visited[i]:
            result = dfs_recur(i)
            ans += result * (result - 1)
    print(ans)
```

## 주석으로 달 설명

문제를 푸는 방식은 여러가지지만... 일단은 DFS로 해결했다.
사실 그렇게 잘 이해하기는 못했다.
[참고한링크](https://velog.io/@e_juhee/python-%EB%B0%B1%EC%A4%80-21606-%EC%95%84%EC%B9%A8-%EC%82%B0%EC%B1%85-DFS)
반드시 다시 보자.
